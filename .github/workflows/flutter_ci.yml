name: Flutter CI

on:
  push:
    branches: [ main, dev ]

jobs:
  analyze_and_test:
    # Give the job a more descriptive name for the UI
    name: Analyze & Test
    runs-on: ubuntu-latest

    # This job needs 'actions: write' to upload the coverage report artifact.
    permissions:
      contents: read
      actions: write

    steps:
      # 1. Check out code
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      # 2. Install Flutter
      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      # 3. Get dependencies
      - name: 📦 Get dependencies
        run: flutter pub get

      # 4. Configure Firebase
      - name: 🔥 Configure Firebase
        run: |
          npm install -g firebase-tools
          dart pub global activate flutterfire_cli
          flutterfire configure --project=pfur-seasons --platforms="android,ios" --yes --token=${{ secrets.FIREBASE_CI_TOKEN }}
        # IMPORTANT: Replace 'pfur-seasons' with your actual Firebase Project ID if it's different.

      # 5. Static analysis
      - name: 🔍 Analyze code
        run: flutter analyze --no-fatal-infos --no-fatal-warnings

      # 6. Run tests
      - name: 🧪 Run tests
        run: flutter test --coverage

      # 7. Archive coverage report (optional)
      - name: 💾 Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-lcov
          path: coverage/lcov.info

  build_apk:
    # Give the job a more descriptive name
    name: Build Android APK
    runs-on: ubuntu-latest
    # This job will only run if the 'analyze_and_test' job succeeds
    needs: analyze_and_test

    # FIXED: This job only needs to read the code, so we give it fewer permissions.
    permissions:
      contents: read

    steps:
      # 1. Check out code
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      # 2. Install Flutter
      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      # 3. Get dependencies
      - name: 📦 Get dependencies
        run: flutter pub get

      # 4. Configure Firebase
      - name: 🔥 Configure Firebase
        run: |
          npm install -g firebase-tools
          dart pub global activate flutterfire_cli
          flutterfire configure --project=pfur-seasons --platforms="android,ios" --yes --token=${{ secrets.FIREBASE_CI_TOKEN }}

      # 5. Build the Android APK
      - name: 🏗️ Build APK
        run: flutter build apk --debug
